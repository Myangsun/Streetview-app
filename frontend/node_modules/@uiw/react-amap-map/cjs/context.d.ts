/// <reference types="@uiw/react-amap-types" />
/// <reference types="@uiw/react-amap-types" />
/// <reference types="@uiw/react-amap-types" />
/// <reference types="@uiw/react-amap-types" />
/// <reference types="@uiw/react-amap-types" />
/// <reference types="@uiw/react-amap-types" />
/// <reference types="@uiw/react-amap-types" />
/// <reference types="@uiw/react-amap-types" />
/// <reference types="@uiw/react-amap-types" />
import React from 'react';
type InitialState = {
    AMap?: typeof AMap;
    map?: AMap.Map;
    container?: HTMLDivElement | null;
};
export declare const initialState: Partial<InitialState>;
export declare const reducer: (state: InitialState, action: InitialState) => {
    AMap?: typeof AMap | undefined;
    map?: AMap.Map | undefined;
    container?: HTMLDivElement | null | undefined;
};
export interface Context {
    state: Partial<InitialState>;
    dispatch: React.Dispatch<InitialState>;
}
export declare const Context: React.Context<Context>;
export declare function useMapContext(): {
    state: Partial<InitialState>;
    dispatch: React.Dispatch<InitialState>;
    AMap?: typeof AMap | undefined;
    map?: AMap.Map | undefined;
    container?: HTMLDivElement | null | undefined;
};
export {};
