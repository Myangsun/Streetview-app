"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useWeather = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var useWeather = function useWeather() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _props$city = props.city,
    city = _props$city === void 0 ? '' : _props$city,
    _props$type = props.type,
    type = _props$type === void 0 ? 'live' : _props$type,
    onComplete = props.onComplete,
    onError = props.onError;
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    weather = _useState2[0],
    setWeather = _useState2[1];
  var funName = type === 'live' ? 'getLive' : 'getForecast';
  function getData(instance) {
    if (type && city && /^(live|forecast)$/.test(type)) {
      instance[funName](city, function (err, data) {
        if (err && onError) {
          onError(err);
        } else if (data && onComplete) {
          onComplete(data);
        }
      });
    }
  }
  (0, _react.useEffect)(function () {
    if (AMap && !weather) {
      var instance;
      AMap.plugin(['AMap.Weather'], function () {
        instance = new AMap.Weather();
        setWeather(instance);
      });
      return function () {
        if (instance) {
          setWeather(undefined);
        }
      };
    }
  }, []);
  (0, _react.useMemo)(function () {
    if (weather && city && type) {
      getData(weather);
    }
  }, [weather, city, type]);
  return {
    weather: weather,
    setWeather: setWeather
  };
};
exports.useWeather = useWeather;