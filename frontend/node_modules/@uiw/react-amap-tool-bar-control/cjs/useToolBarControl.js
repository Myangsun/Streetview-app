"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useToolBarControl = useToolBarControl;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactAmapUtils = require("@uiw/react-amap-utils");
var _reactAmapMap = require("@uiw/react-amap-map");
function useToolBarControl() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    toolBarControl = _useState2[0],
    setToolBarControl = _useState2[1];
  var position = props.position,
    visiable = props.visiable,
    offset = props.offset;
  var _useMapContext = (0, _reactAmapMap.useMapContext)(),
    map = _useMapContext.map;
  (0, _react.useEffect)(function () {
    if (map && !toolBarControl) {
      var instance;
      map.plugin(['AMap.ToolBar'], function () {
        instance = new AMap.ToolBar({
          offset: offset,
          position: position
        });
        map.addControl(instance);
        setToolBarControl(instance);
      });
      return function () {
        if (instance) {
          map.removeControl(instance);
        }
      };
    }
  }, [map]);
  (0, _reactAmapUtils.useVisiable)(toolBarControl, visiable);
  return {
    toolBarControl: toolBarControl,
    setToolBarControl: setToolBarControl
  };
}