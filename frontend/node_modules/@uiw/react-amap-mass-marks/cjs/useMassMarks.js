"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMassMarks = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = require("react");
var _reactAmapUtils = require("@uiw/react-amap-utils");
var _reactAmapMap = require("@uiw/react-amap-map");
var _excluded = ["visiable"];
var useMassMarks = function useMassMarks() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var visiable = props.visiable,
    other = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var _useMapContext = (0, _reactAmapMap.useMapContext)(),
    map = _useMapContext.map;
  var _ref = other || {},
    _ref$opacity = _ref.opacity,
    opacity = _ref$opacity === void 0 ? 0.8 : _ref$opacity,
    _ref$zIndex = _ref.zIndex,
    zIndex = _ref$zIndex === void 0 ? 1111 : _ref$zIndex,
    style = _ref.style,
    data = _ref.data;
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    massMarks = _useState2[0],
    setMassMarks = _useState2[1];
  (0, _react.useEffect)(function () {
    if (!AMap || !map) return;
    if (!massMarks) {
      var initStyle = style;
      if (!initStyle) {
        // JSAPI 2.0 支持显示设置 zIndex, zIndex 越大约靠前，默认按顺序排列
        initStyle = [{
          url: 'https://webapi.amap.com/images/mass/mass0.png',
          anchor: new AMap.Pixel(6, 6),
          size: new AMap.Size(11, 11),
          zIndex: 3
        }, {
          url: 'https://webapi.amap.com/images/mass/mass1.png',
          anchor: new AMap.Pixel(4, 4),
          size: new AMap.Size(7, 7),
          zIndex: 2
        }, {
          url: 'https://webapi.amap.com/images/mass/mass2.png',
          anchor: new AMap.Pixel(3, 3),
          size: new AMap.Size(5, 5),
          zIndex: 1
        }];
      }
      var instance = new AMap.MassMarks(data || [], {
        opacity: opacity,
        zIndex: zIndex,
        style: initStyle
      });
      // 将海量点实例添加到地图上
      // map.add(instance);
      setMassMarks(instance);
      instance.setMap(map);
      return function () {
        if (instance) {
          instance.clear();
          setMassMarks(undefined);
        }
      };
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [map]);
  (0, _reactAmapUtils.useVisiable)(massMarks, visiable);
  (0, _reactAmapUtils.useSettingProperties)(massMarks, props, ['Map', 'Data', 'Style', 'Opacity', 'zIndex', 'Zooms']);
  (0, _reactAmapUtils.useEventProperties)(massMarks, props, [
  // 'onRightClick',
  // 'onDragStart',
  // 'onDragging',
  // 'onDragEnd',
  // 'onMoving',
  // 'onMoveEnd',
  // 'onMoveAlong',
  'onClick', 'onDblClick', 'onMouseMove', 'onMouseOut', 'onMouseUp', 'onMouseDown', 'onMouseOver', 'onTouchStart', 'onTouchEnd']);
  return {
    massMarks: massMarks,
    setMassMarks: setMassMarks
  };
};
exports.useMassMarks = useMassMarks;