import { useEffect, useState } from 'react';
import { useVisiable } from '@uiw/react-amap-utils';
import { useMapContext } from '@uiw/react-amap-map';
export function useControlBarControl(props) {
  if (props === void 0) {
    props = {};
  }
  var {
    position,
    visiable,
    offset
  } = props;
  var [controlBarControl, setControlBarControl] = useState();
  var {
    map
  } = useMapContext();
  useEffect(() => {
    if (map && !controlBarControl) {
      var instance;
      map.plugin(['AMap.ControlBar', 'AMap.HawkEye'], () => {
        instance = new AMap.ControlBar({
          offset: offset,
          position
        });
        map.addControl(instance);
        setControlBarControl(instance);
      });
      return () => {
        if (instance) {
          map.removeControl(instance);
        }
      };
    }
  }, [map]);
  useVisiable(controlBarControl, visiable);
  return {
    controlBarControl,
    setControlBarControl
  };
}