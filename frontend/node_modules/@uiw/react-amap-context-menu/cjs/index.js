"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  ContextMenu: true
};
exports.ContextMenu = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _react = _interopRequireWildcard(require("react"));
var _useContextMenu2 = require("./useContextMenu");
Object.keys(_useContextMenu2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _useContextMenu2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _useContextMenu2[key];
    }
  });
});
var _Item = _interopRequireWildcard(require("./Item"));
Object.keys(_Item).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _Item[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _Item[key];
    }
  });
});
var _jsxRuntime = require("react/jsx-runtime");
var ContextMenu = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
  var _useContextMenu = (0, _useContextMenu2.useContextMenu)(props),
    contextMenu = _useContextMenu.contextMenu;
  (0, _react.useImperativeHandle)(ref, function () {
    return (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, props), {}, {
      contextMenu: contextMenu
    });
  });
  var childs = _react["default"].Children.toArray(props.children);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_react.Fragment, {
    children: AMap && contextMenu && childs.map(function (child, key) {
      if (! /*#__PURE__*/_react["default"].isValidElement(child)) return null;
      return /*#__PURE__*/_react["default"].cloneElement(child, (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, child.props), {}, {
        AMap: AMap,
        map: props.map,
        contextMenu: contextMenu,
        key: key
      }));
    })
  });
});
exports.ContextMenu = ContextMenu;
ContextMenu.Item = _Item["default"];