import _extends from "@babel/runtime/helpers/extends";
import React, { isValidElement, useImperativeHandle, cloneElement } from 'react';
import { usePolyline } from './usePolyline';
export * from './usePolyline';
export var Polyline = /*#__PURE__*/React.forwardRef((props, ref) => {
  var {
    children
  } = props;
  var {
    polyline
  } = usePolyline(props);
  useImperativeHandle(ref, () => _extends({}, props, {
    polyline
  }), [polyline]);
  if (children && /*#__PURE__*/isValidElement(children) && polyline) {
    var oProps = {
      polyElement: polyline,
      polyline
    };
    return /*#__PURE__*/cloneElement(children, _extends({}, props, oProps));
  }
  return null;
});