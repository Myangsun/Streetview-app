"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMarker = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = require("react");
var _reactAmapUtils = require("@uiw/react-amap-utils");
var _reactAmapMap = require("@uiw/react-amap-map");
var _excluded = ["visiable", "children"];
var useMarker = function useMarker() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var visiable = props.visiable,
    children = props.children,
    other = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var _useMapContext = (0, _reactAmapMap.useMapContext)(),
    map = _useMapContext.map;
  var _useState = (0, _react.useState)(),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    marker = _useState2[0],
    setMarker = _useState2[1];
  var _usePortal = (0, _reactAmapUtils.usePortal)(),
    container = _usePortal.container,
    Portal = _usePortal.Portal;
  (0, _react.useEffect)(function () {
    if (!marker && map) {
      if (props.children) {
        other.content = container;
      }
      var instance = new AMap.Marker((0, _objectSpread2["default"])({}, other));
      map.add(instance);
      setMarker(instance);
    }
    return function () {
      if (marker) {
        // @fix [244] https://github.com/uiwjs/react-amap/issues/244
        // typeof marker.remove === 'function' && marker.remove();
        marker.setMap(null);
        setMarker(undefined);
      }
    };
  }, [map, marker]);
  (0, _reactAmapUtils.useVisiable)(marker, visiable);
  (0, _reactAmapUtils.useSettingProperties)(marker, props, ['Path', 'Anchor', 'Offset', 'Animation', 'Clickable', 'Position', 'Angle', 'Label', 'zIndex', 'Icon', 'Draggable', 'Cursor', 'Content', 'Map', 'Title', 'Top', 'Shadow', 'Shape', 'ExtData']);
  (0, _reactAmapUtils.useEventProperties)(marker, props, ['onClick', 'onDblClick', 'onRightClick', 'onMouseMove', 'onMouseOver', 'onMouseOut', 'onMouseDown', 'onMouseUp', 'onDragStart', 'onDragging', 'onDragEnd', 'onMoving', 'onMoveEnd', 'onMoveAlong', 'onTouchStart', 'onTouchMove', 'onTouchEnd']);
  return {
    marker: marker,
    setMarker: setMarker,
    MarkerPortal: Portal
  };
};
exports.useMarker = useMarker;