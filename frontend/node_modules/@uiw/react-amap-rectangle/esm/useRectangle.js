import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["visiable"];
import { useState, useEffect } from 'react';
import { useVisiable, useEventProperties, useSettingProperties } from '@uiw/react-amap-utils';
import { useMapContext } from '@uiw/react-amap-map';
export var useRectangle = function useRectangle(props) {
  if (props === void 0) {
    props = {};
  }
  var {
      visiable
    } = props,
    other = _objectWithoutPropertiesLoose(props, _excluded);
  var {
    map
  } = useMapContext();
  var [rectangle, setRectangle] = useState();
  useEffect(() => {
    if (!AMap || !map) return;
    if (!rectangle) {
      var instance = new AMap.Rectangle(_extends({}, other));
      map.add(instance);
      setRectangle(instance);
      return () => {
        if (instance) {
          if (AMap.v) {
            map && map.remove(instance);
          } else {
            // 暂不使用这个 API，这个不兼容 v1.4.xx，改用 map.remove API
            map && map.removeLayer(instance);
          }
          setRectangle(undefined);
        }
      };
    }
  }, [map]);
  useVisiable(rectangle, visiable);
  useSettingProperties(rectangle, props, ['Bounds', 'Options', 'Map', 'ExtData']);
  useEventProperties(rectangle, props, ['onHide', 'onShow', 'onClick', 'onDblClick', 'onRightClick', 'onMouseOut', 'onMouseOver', 'onMouseUp', 'onMouseDown', 'onTouchEnd', 'onTouchMove', 'onTouchStart']);
  return {
    rectangle,
    setRectangle
  };
};