[{"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/index.js":"1","/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/App.js":"2","/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Header.js":"3","/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Submit.js":"4","/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/MapComponent.js":"5","/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/config.js":"6","/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/amapConfig.js":"7"},{"size":703,"mtime":1688190438350,"results":"8","hashOfConfig":"9"},{"size":301,"mtime":1688449822892,"results":"10","hashOfConfig":"9"},{"size":955,"mtime":1689176365191,"results":"11","hashOfConfig":"9"},{"size":491,"mtime":1689180759562,"results":"12","hashOfConfig":"9"},{"size":4394,"mtime":1689182151448,"results":"13","hashOfConfig":"9"},{"size":234,"mtime":1689180023244,"results":"14","hashOfConfig":"9"},{"size":149,"mtime":1688697980469,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"qnxfdb",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/index.js",[],[],[],"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/App.js",[],[],"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Header.js",["41"],[],"import React from \"react\";\nimport logo from \"../logo.png\";\n\nfunction Header() {\n  return (\n    <div className=\"fixed w-full top-0 z-50 bg-white flex justify-center items-center p-2 lg:px-5 shadow-md\">\n      {/* left */}\n      <div className=\"flex items-center \">\n        {/* <img src={logo} width={60} height={60} /> */}\n        <div className=\"flex ml-1 items-center rounded-full p-2\">\n          <h1 className=\"font-bold text-xl\">ReCityGen</h1>\n        </div>\n      </div>\n\n      {/* log in */}\n      {/* <div className=\"flex items-center sm:space-x-2 justify-end\"> */}\n      {/* profile pic */}\n      {/* <img */}\n      {/* //   onClick={signOut} */}\n      {/* className=\"rounded-full curser-pointer\" */}\n      {/* src={user.image} */}\n      {/* width={40} */}\n      {/* height={40} */}\n      {/* </img> */}\n      {/* <p className=\"whitespace-nowrap font-semibold pr-3\">{user.name}</p> */}\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Submit.js",[],[],"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/MapComponent.js",["42"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nimport Submit from \"./Submit\";\nimport dynamoDB from \"../config\";\nimport amapConfig from \"../amapConfig\";\n\nconst MapComponent = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0,\n  });\n  window._AMapSecurityConfig = {\n    securityJsCode: amapConfig.securityJsCode,\n  };\n  const geocoder = useRef(null);\n\n  useEffect(() => {\n    AMapLoader.load({\n      key: amapConfig.key,\n      version: \"2.0\",\n      plugins: [\"AMap.Geocoder\", \"AMap.Geolocation\"],\n    })\n      .then((AMap) => {\n        const map = new AMap.Map(\"container\", {\n          zoom: 13,\n          resizeEnable: true,\n        });\n\n        const marker = new AMap.Marker({\n          map: map,\n        });\n\n        geocoder.current = new AMap.Geocoder({});\n\n        const geolocation = new AMap.Geolocation({\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0,\n          convert: true,\n          showButton: true,\n          buttonPosition: \"RB\",\n          buttonOffset: new AMap.Pixel(10, 20),\n          showMarker: false,\n          showCircle: true,\n          panToLocation: true,\n          zoomToAccuracy: true,\n        });\n\n        map.addControl(geolocation);\n\n        geolocation.getCurrentPosition((status, result) => {\n          if (status === \"complete\") {\n            marker.setPosition(result.position);\n            setMarkerPosition({\n              longitude: result.position.lng,\n              latitude: result.position.lat,\n            });\n          } else {\n            console.log(\"Geolocation failed: \" + result.message);\n          }\n        });\n\n        map.on(\"moveend\", function () {\n          const center = map.getCenter();\n          marker.setPosition(center);\n          setMarkerPosition({ longitude: center.lng, latitude: center.lat });\n        });\n      })\n      .catch((e) => console.error(e));\n  }, []);\n\n  const getAddress = (longitude, latitude) => {\n    return new Promise((resolve, reject) => {\n      geocoder.current.getAddress([longitude, latitude], (status, result) => {\n        console.log(\"Geocoding status: \", status);\n        console.log(\"Geocoding result: \", result);\n        if (status === \"complete\" && result.info === \"OK\") {\n          resolve(result.regeocode.formattedAddress);\n        } else {\n          reject(\"Failed to get address\");\n        }\n      });\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (userId.trim() === \"\") {\n        alert(\"User ID cannot be empty\");\n        return;\n      }\n      const currentAddress = await getAddress(\n        markerPosition.longitude,\n        markerPosition.latitude\n      );\n      const params = {\n        TableName: \"location\",\n        Item: {\n          id: Date.now().toString(),\n          username: userId,\n          address: currentAddress,\n          position: {\n            longitude: markerPosition.longitude,\n            latitude: markerPosition.latitude,\n          },\n          timestamp: new Date().toISOString(),\n        },\n      };\n      await dynamoDB.put(params).promise();\n      setAddress(currentAddress);\n      alert(\"Data submitted successfully 成功提交\");\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n    }\n  };\n\n  return (\n    <div className=\"h-screen bg-gray-100 overflow-hidden mx-auto\">\n      <div className=\"fixed w-full top-20 z-50 text-center\">\n        <input\n          className=\" w-[80%] text-lg rounded-lg px-3 pt-2 pb-2\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          placeholder=\"输入用户名\"\n        />{\" \"}\n        {/* <div className=\"w-[60%] top-28 text-md rounded-lg font-light px-3\"> */}\n        {/* Address: {address} */}\n        {/* </div> */}\n      </div>\n      <div id=\"container\" className=\"h-full\"></div>\n\n      <div className=\"w-full fixed bottom-14 items-center flex\">\n        <button\n          onClick={handleSubmit}\n          className=\"bg-gray-500 hover:bg-gray-700 text-white text-md font-bold py-2 px-4 rounded ml-auto mr-3\"\n        >\n          提交\n        </button>\n        {/* Click to send location information/ request url */}\n        <Submit />\n      </div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n",[],"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/config.js",[],[],"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/amapConfig.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":9,"column":10,"nodeType":"45","messageId":"46","endLine":9,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'address' is assigned a value but never used."]