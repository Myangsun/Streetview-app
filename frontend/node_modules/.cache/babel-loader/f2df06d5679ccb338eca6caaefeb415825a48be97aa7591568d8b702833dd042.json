{"ast":null,"code":"var _jsxFileName = \"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nimport Submit from \"./Submit\";\nimport amapConfig from \"../amapConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0\n  });\n  const geocoder = useRef(null);\n  useEffect(() => {\n    AMapLoader.load({\n      key: amapConfig.key,\n      version: \"2.0\",\n      plugins: [\"AMap.Geocoder\", \"AMap.Geolocation\"]\n    }).then(AMap => {\n      const map = new AMap.Map(\"container\", {\n        zoom: 13,\n        resizeEnable: true\n      });\n      const marker = new AMap.Marker({\n        map: map\n      });\n      geocoder.current = new AMap.Geocoder({});\n      const geolocation = new AMap.Geolocation({\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0,\n        convert: true,\n        showButton: true,\n        buttonPosition: \"RB\",\n        buttonOffset: new AMap.Pixel(10, 20),\n        showMarker: false,\n        showCircle: true,\n        panToLocation: true,\n        zoomToAccuracy: true\n      });\n      map.addControl(geolocation);\n      geolocation.getCurrentPosition((status, result) => {\n        if (status === \"complete\") {\n          marker.setPosition(result.position);\n          setMarkerPosition({\n            longitude: result.position.lng,\n            latitude: result.position.lat\n          });\n        } else {\n          console.log(\"Geolocation failed: \" + result.message);\n        }\n      });\n      map.on(\"moveend\", function () {\n        const center = map.getCenter();\n        marker.setPosition(center);\n        setMarkerPosition({\n          longitude: center.lng,\n          latitude: center.lat\n        });\n      });\n    }).catch(e => console.error(e));\n  }, []);\n  const getAddress = (longitude, latitude) => {\n    return new Promise((resolve, reject) => {\n      geocoder.current.getAddress([longitude, latitude], (status, result) => {\n        console.log(\"Geocoding status: \", status);\n        console.log(\"Geocoding result: \", result);\n        if (status === \"complete\" && result.info === \"OK\") {\n          resolve(result.regeocode.formattedAddress);\n        } else {\n          reject(\"Failed to get address\");\n        }\n      });\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      if (userId.trim() === \"\") {\n        alert(\"User ID cannot be empty\");\n        return;\n      }\n      const currentAddress = await getAddress(markerPosition.longitude, markerPosition.latitude);\n      const dataToSave = {\n        username: userId,\n        address: currentAddress,\n        position: {\n          longitude: markerPosition.longitude,\n          latitude: markerPosition.latitude\n        },\n        timestamp: Date.now()\n      };\n      const jsonData = JSON.stringify(dataToSave);\n\n      // Save the data to localStorage\n      localStorage.setItem(\"userInfo\", jsonData);\n      setAddress(currentAddress);\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen bg-gray-100 overflow-hidden mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed w-full top-20 z-50 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \" w-[60%] text-lg rounded-lg px-3\",\n        value: userId,\n        onChange: e => setUserId(e.target.value),\n        placeholder: \"Enter User ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[60%] top-28 text-md rounded-lg font-light px-3\",\n        children: [\"Address: \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      className: \"h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full fixed bottom-12 items-center flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"bg-gray-500 hover:bg-gray-700 text-white text-md font-bold py-1 px-3 rounded ml-auto mr-6\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Submit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"yvVVhFWGgMGnIc4dH1Q3CkXxk38=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AMapLoader","Submit","amapConfig","jsxDEV","_jsxDEV","MapComponent","_s","userId","setUserId","address","setAddress","markerPosition","setMarkerPosition","longitude","latitude","geocoder","load","key","version","plugins","then","AMap","map","Map","zoom","resizeEnable","marker","Marker","current","Geocoder","geolocation","Geolocation","enableHighAccuracy","timeout","maximumAge","convert","showButton","buttonPosition","buttonOffset","Pixel","showMarker","showCircle","panToLocation","zoomToAccuracy","addControl","getCurrentPosition","status","result","setPosition","position","lng","lat","console","log","message","on","center","getCenter","catch","e","error","getAddress","Promise","resolve","reject","info","regeocode","formattedAddress","handleSubmit","trim","alert","currentAddress","dataToSave","username","timestamp","Date","now","jsonData","JSON","stringify","localStorage","setItem","className","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nimport Submit from \"./Submit\";\nimport amapConfig from \"../amapConfig\";\n\nconst MapComponent = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0,\n  });\n  const geocoder = useRef(null);\n\n  useEffect(() => {\n    AMapLoader.load({\n      key: amapConfig.key,\n      version: \"2.0\",\n      plugins: [\"AMap.Geocoder\", \"AMap.Geolocation\"],\n    })\n      .then((AMap) => {\n        const map = new AMap.Map(\"container\", {\n          zoom: 13,\n          resizeEnable: true,\n        });\n\n        const marker = new AMap.Marker({\n          map: map,\n        });\n\n        geocoder.current = new AMap.Geocoder({});\n\n        const geolocation = new AMap.Geolocation({\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0,\n          convert: true,\n          showButton: true,\n          buttonPosition: \"RB\",\n          buttonOffset: new AMap.Pixel(10, 20),\n          showMarker: false,\n          showCircle: true,\n          panToLocation: true,\n          zoomToAccuracy: true,\n        });\n\n        map.addControl(geolocation);\n\n        geolocation.getCurrentPosition((status, result) => {\n          if (status === \"complete\") {\n            marker.setPosition(result.position);\n            setMarkerPosition({\n              longitude: result.position.lng,\n              latitude: result.position.lat,\n            });\n          } else {\n            console.log(\"Geolocation failed: \" + result.message);\n          }\n        });\n\n        map.on(\"moveend\", function () {\n          const center = map.getCenter();\n          marker.setPosition(center);\n          setMarkerPosition({ longitude: center.lng, latitude: center.lat });\n        });\n      })\n      .catch((e) => console.error(e));\n  }, []);\n\n  const getAddress = (longitude, latitude) => {\n    return new Promise((resolve, reject) => {\n      geocoder.current.getAddress([longitude, latitude], (status, result) => {\n        console.log(\"Geocoding status: \", status);\n        console.log(\"Geocoding result: \", result);\n        if (status === \"complete\" && result.info === \"OK\") {\n          resolve(result.regeocode.formattedAddress);\n        } else {\n          reject(\"Failed to get address\");\n        }\n      });\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (userId.trim() === \"\") {\n        alert(\"User ID cannot be empty\");\n        return;\n      }\n      const currentAddress = await getAddress(\n        markerPosition.longitude,\n        markerPosition.latitude\n      );\n\n      const dataToSave = {\n        username: userId,\n        address: currentAddress,\n        position: {\n          longitude: markerPosition.longitude,\n          latitude: markerPosition.latitude,\n        },\n        timestamp: Date.now(),\n      };\n\n      const jsonData = JSON.stringify(dataToSave);\n\n      // Save the data to localStorage\n      localStorage.setItem(\"userInfo\", jsonData);\n\n      setAddress(currentAddress);\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n    }\n  };\n\n  return (\n    <div className=\"h-screen bg-gray-100 overflow-hidden mx-auto\">\n      <div className=\"fixed w-full top-20 z-50 text-center\">\n        <input\n          className=\" w-[60%] text-lg rounded-lg px-3\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          placeholder=\"Enter User ID\"\n        />{\" \"}\n        <div className=\"w-[60%] top-28 text-md rounded-lg font-light px-3\">\n          Address: {address}\n        </div>\n      </div>\n      <div id=\"container\" className=\"h-full\"></div>\n\n      <div className=\"w-full fixed bottom-12 items-center flex\">\n        <button\n          onClick={handleSubmit}\n          className=\"bg-gray-500 hover:bg-gray-700 text-white text-md font-bold py-1 px-3 rounded ml-auto mr-6\"\n        >\n          Submit\n        </button>\n        {/* Click to send location information/ request URL */}\n        <Submit />\n      </div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}