{"ast":null,"code":"var _jsxFileName = \"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Maptest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Map, Geolocation, Marker } from \"@uiw/react-amap\";\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage, ref, uploadString } from \"firebase/storage\";\n\n// Initialize Firebase. Replace these values with your actual Firebase config.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB3p-yiWJEFyxN_qJeDHOw3FKy3KtrgpQA\",\n  authDomain: \"streetview-app-5cc5a.firebaseapp.com\",\n  projectId: \"streetview-app-5cc5a\",\n  storageBucket: \"streetview-app-5cc5a.appspot.com\",\n  messagingSenderId: \"820610466111\",\n  appId: \"1:820610466111:web:3f7dd70579f8a75a5d938a\",\n  measurementId: \"G-8EMLDPGBSM\"\n};\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app);\nconst MapComponent = () => {\n  _s();\n  const mapRef = useRef();\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0\n  });\n  useEffect(() => {\n    if (!mapRef.current) {\n      return;\n    }\n    const AMap = window.AMap;\n    const map = mapRef.current.getAMapInstance();\n    const geocoder = new AMap.Geocoder({});\n    AMap.event.addListener(map, \"moveend\", () => {\n      const center = map.getCenter();\n      setMarkerPosition({\n        longitude: center.lng,\n        latitude: center.lat\n      });\n      geocoder.getAddress(center, function (status, result) {\n        if (status === \"complete\" && result.info === \"OK\") {\n          setAddress(result.regeocode.formattedAddress);\n        }\n      });\n    });\n  }, []);\n  const handleSubmit = async () => {\n    try {\n      const storageRef = ref(storage, `locations/${userId}`);\n      await uploadString(storageRef, address);\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: userId,\n      onChange: e => setUserId(e.target.value),\n      placeholder: \"Enter User ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      ref: mapRef,\n      center: markerPosition,\n      zoom: 13,\n      amapkey: \"5006aba1c28995bc84672dca708fc2d8\",\n      version: \"2.0\",\n      children: [/*#__PURE__*/_jsxDEV(Geolocation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Address: \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"uY9pnVHlM4iDsRd8eZA8r4OBsTg=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Map","Geolocation","Marker","initializeApp","getStorage","ref","uploadString","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","storage","MapComponent","_s","mapRef","userId","setUserId","address","setAddress","markerPosition","setMarkerPosition","longitude","latitude","current","AMap","window","map","getAMapInstance","geocoder","Geocoder","event","addListener","center","getCenter","lng","lat","getAddress","status","result","info","regeocode","formattedAddress","handleSubmit","storageRef","alert","error","console","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","zoom","amapkey","version","position","onClick","_c","$RefreshReg$"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Maptest.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Map, Geolocation, Marker } from \"@uiw/react-amap\";\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage, ref, uploadString } from \"firebase/storage\";\n\n// Initialize Firebase. Replace these values with your actual Firebase config.\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB3p-yiWJEFyxN_qJeDHOw3FKy3KtrgpQA\",\n  authDomain: \"streetview-app-5cc5a.firebaseapp.com\",\n  projectId: \"streetview-app-5cc5a\",\n  storageBucket: \"streetview-app-5cc5a.appspot.com\",\n  messagingSenderId: \"820610466111\",\n  appId: \"1:820610466111:web:3f7dd70579f8a75a5d938a\",\n  measurementId: \"G-8EMLDPGBSM\",\n};\n\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app);\n\nconst MapComponent = () => {\n  const mapRef = useRef();\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0,\n  });\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      return;\n    }\n\n    const AMap = window.AMap;\n    const map = mapRef.current.getAMapInstance();\n    const geocoder = new AMap.Geocoder({});\n\n    AMap.event.addListener(map, \"moveend\", () => {\n      const center = map.getCenter();\n      setMarkerPosition({ longitude: center.lng, latitude: center.lat });\n\n      geocoder.getAddress(center, function (status, result) {\n        if (status === \"complete\" && result.info === \"OK\") {\n          setAddress(result.regeocode.formattedAddress);\n        }\n      });\n    });\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const storageRef = ref(storage, `locations/${userId}`);\n      await uploadString(storageRef, address);\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        value={userId}\n        onChange={(e) => setUserId(e.target.value)}\n        placeholder=\"Enter User ID\"\n      />\n      <Map\n        ref={mapRef}\n        center={markerPosition}\n        zoom={13}\n        amapkey=\"5006aba1c28995bc84672dca708fc2d8\"\n        version=\"2.0\"\n      >\n        <Geolocation />\n        <Marker position={markerPosition} />\n      </Map>\n      <button onClick={handleSubmit}>Submit</button>\n      <div>Address: {address}</div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}