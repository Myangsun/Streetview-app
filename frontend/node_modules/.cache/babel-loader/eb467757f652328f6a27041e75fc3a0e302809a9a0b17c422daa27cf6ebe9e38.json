{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useVisiable } from '@uiw/react-amap-utils';\nimport { useMapContext } from '@uiw/react-amap-map';\nexport function useToolBarControl(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var [toolBarControl, setToolBarControl] = useState();\n  var {\n    position,\n    visiable,\n    offset\n  } = props;\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (map && !toolBarControl) {\n      var instance;\n      map.plugin(['AMap.ToolBar'], () => {\n        instance = new AMap.ToolBar({\n          offset,\n          position\n        });\n        map.addControl(instance);\n        setToolBarControl(instance);\n      });\n      return () => {\n        if (instance) {\n          map.removeControl(instance);\n        }\n      };\n    }\n  }, [map]);\n  useVisiable(toolBarControl, visiable);\n  return {\n    toolBarControl,\n    setToolBarControl\n  };\n}","map":{"version":3,"names":["useEffect","useState","useVisiable","useMapContext","useToolBarControl","props","toolBarControl","setToolBarControl","position","visiable","offset","map","instance","plugin","AMap","ToolBar","addControl","removeControl"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/node_modules/@uiw/react-amap-tool-bar-control/esm/useToolBarControl.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useVisiable } from '@uiw/react-amap-utils';\nimport { useMapContext } from '@uiw/react-amap-map';\nexport function useToolBarControl(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var [toolBarControl, setToolBarControl] = useState();\n  var {\n    position,\n    visiable,\n    offset\n  } = props;\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (map && !toolBarControl) {\n      var instance;\n      map.plugin(['AMap.ToolBar'], () => {\n        instance = new AMap.ToolBar({\n          offset,\n          position\n        });\n        map.addControl(instance);\n        setToolBarControl(instance);\n      });\n      return () => {\n        if (instance) {\n          map.removeControl(instance);\n        }\n      };\n    }\n  }, [map]);\n  useVisiable(toolBarControl, visiable);\n  return {\n    toolBarControl,\n    setToolBarControl\n  };\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAO,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EACvC,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;IACpBA,KAAK,GAAG,CAAC,CAAC;EACZ;EACA,IAAI,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,CAAC;EACpD,IAAI;IACFO,QAAQ;IACRC,QAAQ;IACRC;EACF,CAAC,GAAGL,KAAK;EACT,IAAI;IACFM;EACF,CAAC,GAAGR,aAAa,CAAC,CAAC;EACnBH,SAAS,CAAC,MAAM;IACd,IAAIW,GAAG,IAAI,CAACL,cAAc,EAAE;MAC1B,IAAIM,QAAQ;MACZD,GAAG,CAACE,MAAM,CAAC,CAAC,cAAc,CAAC,EAAE,MAAM;QACjCD,QAAQ,GAAG,IAAIE,IAAI,CAACC,OAAO,CAAC;UAC1BL,MAAM;UACNF;QACF,CAAC,CAAC;QACFG,GAAG,CAACK,UAAU,CAACJ,QAAQ,CAAC;QACxBL,iBAAiB,CAACK,QAAQ,CAAC;MAC7B,CAAC,CAAC;MACF,OAAO,MAAM;QACX,IAAIA,QAAQ,EAAE;UACZD,GAAG,CAACM,aAAa,CAACL,QAAQ,CAAC;QAC7B;MACF,CAAC;IACH;EACF,CAAC,EAAE,CAACD,GAAG,CAAC,CAAC;EACTT,WAAW,CAACI,cAAc,EAAEG,QAAQ,CAAC;EACrC,OAAO;IACLH,cAAc;IACdC;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}