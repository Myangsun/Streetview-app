{"ast":null,"code":"var _jsxFileName = \"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Maptest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Map } from \"react-amap\";\nimport Geolocation from \"@uiw/react-amap\";\nimport Marker from \"@uiw/react-amap\";\nimport Geocoder from \"@uiw/react-amap\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\n// Initialize Firebase. Replace these values with your actual Firebase config.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"your-api-key\",\n  authDomain: \"your-auth-domain\",\n  databaseURL: \"your-database-url\",\n  projectId: \"your-project-id\",\n  storageBucket: \"your-storage-bucket\",\n  messagingSenderId: \"your-messaging-sender-id\",\n  appId: \"your-app-id\",\n  measurementId: \"your-measurement-id\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nconst MapComponent = () => {\n  _s();\n  const [center, setCenter] = useState({\n    longitude: 0,\n    latitude: 0\n  });\n  const [marker, setMarker] = useState({\n    longitude: 0,\n    latitude: 0\n  });\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  // To update marker position when the map is moved\n  const events = {\n    moveend: () => {\n      setMarker(center);\n    }\n  };\n  const handlePosition = position => {\n    setCenter(position);\n    setMarker(position);\n  };\n  const handleGeocode = regeocode => {\n    setAddress(regeocode.formattedAddress);\n  };\n  const handleSubmit = async () => {\n    try {\n      await storage.ref(`/locations/${userId}`).set({\n        userId,\n        address\n      });\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      alert(\"Failed to submit data: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: userId,\n      onChange: e => setUserId(e.target.value),\n      placeholder: \"Enter User ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      amapkey: \"your-amap-key\",\n      center: center,\n      events: events,\n      children: [/*#__PURE__*/_jsxDEV(Geolocation, {\n        onComplete: handlePosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: marker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Geocoder, {\n        location: marker,\n        onComplete: handleGeocode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Address: \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"UotjZTMVP8oo1KR9/KgepUxgAjE=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","Map","Geolocation","Marker","Geocoder","firebase","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","storage","MapComponent","_s","center","setCenter","longitude","latitude","marker","setMarker","userId","setUserId","address","setAddress","events","moveend","handlePosition","position","handleGeocode","regeocode","formattedAddress","handleSubmit","ref","set","alert","error","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","amapkey","onComplete","location","onClick","_c","$RefreshReg$"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Maptest.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Map } from \"react-amap\";\nimport Geolocation from \"@uiw/react-amap\";\nimport Marker from \"@uiw/react-amap\";\nimport Geocoder from \"@uiw/react-amap\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\n// Initialize Firebase. Replace these values with your actual Firebase config.\nconst firebaseConfig = {\n  apiKey: \"your-api-key\",\n  authDomain: \"your-auth-domain\",\n  databaseURL: \"your-database-url\",\n  projectId: \"your-project-id\",\n  storageBucket: \"your-storage-bucket\",\n  messagingSenderId: \"your-messaging-sender-id\",\n  appId: \"your-app-id\",\n  measurementId: \"your-measurement-id\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst storage = firebase.storage();\n\nconst MapComponent = () => {\n  const [center, setCenter] = useState({ longitude: 0, latitude: 0 });\n  const [marker, setMarker] = useState({ longitude: 0, latitude: 0 });\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  // To update marker position when the map is moved\n  const events = {\n    moveend: () => {\n      setMarker(center);\n    },\n  };\n\n  const handlePosition = (position) => {\n    setCenter(position);\n    setMarker(position);\n  };\n\n  const handleGeocode = (regeocode) => {\n    setAddress(regeocode.formattedAddress);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      await storage.ref(`/locations/${userId}`).set({ userId, address });\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      alert(\"Failed to submit data: \", error);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        value={userId}\n        onChange={(e) => setUserId(e.target.value)}\n        placeholder=\"Enter User ID\"\n      />\n      <Map amapkey=\"your-amap-key\" center={center} events={events}>\n        <Geolocation onComplete={handlePosition} />\n        <Marker position={marker} />\n        <Geocoder location={marker} onComplete={handleGeocode} />\n      </Map>\n      <button onClick={handleSubmit}>Submit</button>\n      <div>Address: {address}</div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}