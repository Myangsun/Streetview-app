{"ast":null,"code":"var _jsxFileName = \"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Maptest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nimport { ref, uploadString } from \"firebase/storage\";\nimport { db, storage } from \"../firebase\";\nimport { doc, setDoc, Timestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0\n  });\n  useEffect(() => {\n    AMapLoader.load({\n      key: \"5006aba1c28995bc84672dca708fc2d8\",\n      version: \"2.0\",\n      plugins: [\"AMap.Geocoder\", \"AMap.Geolocation\"]\n    }).then(AMap => {\n      const map = new AMap.Map(\"container\", {\n        zoom: 13,\n        resizeEnable: true\n      });\n      const marker = new AMap.Marker({\n        map: map\n      });\n      const geocoder = new AMap.Geocoder({});\n      const geolocation = new AMap.Geolocation({\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0,\n        convert: true,\n        showButton: true,\n        buttonPosition: \"RB\",\n        buttonOffset: new AMap.Pixel(10, 20),\n        showMarker: false,\n        showCircle: true,\n        panToLocation: true,\n        zoomToAccuracy: true\n      });\n      map.addControl(geolocation);\n      geolocation.getCurrentPosition((status, result) => {\n        if (status === \"complete\") {\n          marker.setPosition(result.position);\n          setMarkerPosition({\n            longitude: result.position.lng,\n            latitude: result.position.lat\n          });\n        } else {\n          console.log(\"Geolocation failed: \" + result.message);\n        }\n      });\n\n      // Event on map drag end\n      map.on(\"moveend\", function () {\n        const center = map.getCenter();\n        marker.setPosition(center);\n        setMarkerPosition({\n          longitude: center.lng,\n          latitude: center.lat\n        });\n        console.log(markerPosition);\n      });\n      const getAddress = (longitude, latitude) => {\n        return new Promise((resolve, reject) => {\n          geocoder.getAddress([longitude, latitude], (status, result) => {\n            if (status === \"complete\" && result.info === \"OK\") {\n              resolve(result.regeocode.formattedAddress);\n            } else {\n              reject(\"Failed to get address\");\n            }\n          });\n        });\n      };\n    }).catch(e => console.error(e));\n  }, []);\n  const handleSubmit = async () => {\n    try {\n      if (userId.trim() === \"\") {\n        alert(\"User ID cannot be empty\");\n        return;\n      }\n      const address = await getAddress(markerPosition.longitude, markerPosition.latitude);\n      const docRef = doc(db, \"locations\", userId);\n      await setDoc(docRef, {\n        username: userId,\n        address: address,\n        timestamp: Timestamp.now()\n      });\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen bg-gray-100 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" mx-auto flex justify-center mt-20\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \" text-lg rounded-lg px-3\",\n        value: userId,\n        onChange: e => setUserId(e.target.value),\n        placeholder: \"Enter User ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      style: {\n        width: \"100%\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Address: \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"fhyhHQOnTLde8gIERHBEULtWwZ4=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","AMapLoader","ref","uploadString","db","storage","doc","setDoc","Timestamp","jsxDEV","_jsxDEV","MapComponent","_s","userId","setUserId","address","setAddress","markerPosition","setMarkerPosition","longitude","latitude","load","key","version","plugins","then","AMap","map","Map","zoom","resizeEnable","marker","Marker","geocoder","Geocoder","geolocation","Geolocation","enableHighAccuracy","timeout","maximumAge","convert","showButton","buttonPosition","buttonOffset","Pixel","showMarker","showCircle","panToLocation","zoomToAccuracy","addControl","getCurrentPosition","status","result","setPosition","position","lng","lat","console","log","message","on","center","getCenter","getAddress","Promise","resolve","reject","info","regeocode","formattedAddress","catch","e","error","handleSubmit","trim","alert","docRef","username","timestamp","now","className","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","height","onClick","_c","$RefreshReg$"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Maptest.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nimport { ref, uploadString } from \"firebase/storage\";\nimport { db, storage } from \"../firebase\";\nimport { doc, setDoc, Timestamp } from \"firebase/firestore\";\n\nconst MapComponent = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0,\n  });\n\n  useEffect(() => {\n    AMapLoader.load({\n      key: \"5006aba1c28995bc84672dca708fc2d8\",\n      version: \"2.0\",\n      plugins: [\"AMap.Geocoder\", \"AMap.Geolocation\"],\n    })\n      .then((AMap) => {\n        const map = new AMap.Map(\"container\", {\n          zoom: 13,\n          resizeEnable: true,\n        });\n\n        const marker = new AMap.Marker({\n          map: map,\n        });\n\n        const geocoder = new AMap.Geocoder({});\n\n        const geolocation = new AMap.Geolocation({\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0,\n          convert: true,\n          showButton: true,\n          buttonPosition: \"RB\",\n          buttonOffset: new AMap.Pixel(10, 20),\n          showMarker: false,\n          showCircle: true,\n          panToLocation: true,\n          zoomToAccuracy: true,\n        });\n\n        map.addControl(geolocation);\n\n        geolocation.getCurrentPosition((status, result) => {\n          if (status === \"complete\") {\n            marker.setPosition(result.position);\n            setMarkerPosition({\n              longitude: result.position.lng,\n              latitude: result.position.lat,\n            });\n          } else {\n            console.log(\"Geolocation failed: \" + result.message);\n          }\n        });\n\n        // Event on map drag end\n        map.on(\"moveend\", function () {\n          const center = map.getCenter();\n          marker.setPosition(center);\n          setMarkerPosition({ longitude: center.lng, latitude: center.lat });\n          console.log(markerPosition);\n        });\n        const getAddress = (longitude, latitude) => {\n          return new Promise((resolve, reject) => {\n            geocoder.getAddress([longitude, latitude], (status, result) => {\n              if (status === \"complete\" && result.info === \"OK\") {\n                resolve(result.regeocode.formattedAddress);\n              } else {\n                reject(\"Failed to get address\");\n              }\n            });\n          });\n        };\n      })\n      .catch((e) => console.error(e));\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      if (userId.trim() === \"\") {\n        alert(\"User ID cannot be empty\");\n        return;\n      }\n      const address = await getAddress(\n        markerPosition.longitude,\n        markerPosition.latitude\n      );\n      const docRef = doc(db, \"locations\", userId);\n      await setDoc(docRef, {\n        username: userId,\n        address: address,\n        timestamp: Timestamp.now(),\n      });\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n    }\n  };\n\n  return (\n    <div className=\"h-screen bg-gray-100 overflow-hidden\">\n      <div className=\" mx-auto flex justify-center mt-20\">\n        <input\n          className=\" text-lg rounded-lg px-3\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          placeholder=\"Enter User ID\"\n        />\n      </div>\n      <div id=\"container\" style={{ width: \"100%\", height: \"400px\" }}></div>\n      <button onClick={handleSubmit}>Submit</button>\n      <div>Address: {address}</div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}