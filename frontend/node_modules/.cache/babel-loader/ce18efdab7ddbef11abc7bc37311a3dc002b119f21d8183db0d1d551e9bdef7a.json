{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n/// <reference types=\"@uiw/react-amap-types\" />\nimport { useEffect, useState, useRef } from 'react';\nexport * from './usePortal';\n\n/**\n * 对实例有 setStatus 更改状态的处理\n * @param instance\n * @param props\n * @param propsName\n */\nexport function useSetStatus(instance, props, propsName) {\n  if (props === void 0) {\n    props = {};\n  }\n  if (propsName === void 0) {\n    propsName = [];\n  }\n  propsName.forEach(name => {\n    var eName = name;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var [state, setState] = useState(props[eName]);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (instance && props[eName] !== undefined) {\n        if (props[eName] !== state) {\n          // map.setStatus({\n          //   dragEnable: true,\n          //   keyboardEnable: true,\n          //   doubleClickZoom: true,\n          //   zoomEnable: true,\n          //   rotateEnable: true\n          // });\n          var status = instance.getStatus();\n          instance.setStatus(_extends({}, status, {\n            [eName]: props[eName]\n          }));\n          setState(props[eName]);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instance, props[eName]]);\n  });\n}\n\n/**\n * 针对 Overlay 类型的组件，有公共的是否显示 对象处理\n * 通过参数 `visiable` 来控制执行 `show()` or `hide()`\n */\nexport function useVisiable(instance, visiable) {\n  var [state, setState] = useState(visiable);\n  useEffect(() => {\n    if (instance && visiable !== undefined) {\n      if (visiable) {\n        instance.show && instance.show();\n      } else {\n        instance.hide && instance.hide();\n      }\n      if (visiable !== state) {\n        setState(visiable);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [instance, visiable]);\n}\n\n/**\n * 获取上一轮的 props 或 state\n * How to get the previous props or state?\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * @example\n * ```js\n * function Counter() {\n *   const [count, setCount] = useState(0);\n *   const prevCount = usePrevious(count);\n *   return <h1>Now: {count}, before: {prevCount}</h1>;\n * }\n * ```\n */\nexport function usePrevious(value) {\n  var ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n/**\n * 绑定事件\n * @param instance 实例对象\n * @param props 传递进来的 props\n * @param eventName 事件的名字，如，我们使用 `onClick` 事件，最终被转换成，`click` 绑定到实例中，`onDblClick` => `dblclick`\n *\n * @example\n * ```js\n * useEventProperties<BMap.Marker, UseMarker>(marker!, props, [\n *   'onMouseMove', 'onZoomChange', 'onMapMove', 'onMouseWheel', 'onZoomStart'\n * ]);\n * ```\n */\nexport function useEventProperties(instance, props, eventName, type) {\n  if (props === void 0) {\n    props = {};\n  }\n  if (eventName === void 0) {\n    eventName = [];\n  }\n  eventName.forEach(name => {\n    var eventName = name;\n    var eventHandle = props[eventName];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!instance) return;\n      var eName = name.toLocaleLowerCase().replace(/^on/, '');\n      if (eventHandle && eName) {\n        instance.on(eName, eventHandle);\n      }\n      return () => {\n        if (eName && eventHandle) {\n          instance.off(eName, eventHandle);\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instance, props[eventName]]);\n  });\n}\n\n/**\n * 属性受控\n * @param instance 实例对象\n * @param props 属性值\n * @param propsName 多个属性设置的名称\n * @example\n * ```ts\n * useSettingProperties<AMap.Polyline, UsePolyline>(polyline!, props, [\n *    'Path'\n * ]);\n * ```\n */\nexport function useSettingProperties(instance, props, propsName) {\n  if (instance === void 0) {\n    instance = {};\n  }\n  if (props === void 0) {\n    props = {};\n  }\n  if (propsName === void 0) {\n    propsName = [];\n  }\n  propsName.forEach(name => {\n    var eName = \"set\" + name;\n    var vName = \"\" + name.charAt(0).toLowerCase() + name.slice(1);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var [state, setState] = useState(props[vName]);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (instance && props[vName] !== undefined) {\n        if (props[vName] !== state && instance[eName] && typeof instance[eName] === 'function') {\n          instance[eName](props[vName]);\n          setState(props[vName]);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instance, props[vName]]);\n  });\n}","map":{"version":3,"names":["_extends","useEffect","useState","useRef","useSetStatus","instance","props","propsName","forEach","name","eName","state","setState","undefined","status","getStatus","setStatus","useVisiable","visiable","show","hide","usePrevious","value","ref","current","useEventProperties","eventName","type","eventHandle","toLocaleLowerCase","replace","on","off","useSettingProperties","vName","charAt","toLowerCase","slice"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/node_modules/@uiw/react-amap-utils/esm/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\n/// <reference types=\"@uiw/react-amap-types\" />\nimport { useEffect, useState, useRef } from 'react';\nexport * from './usePortal';\n\n/**\n * 对实例有 setStatus 更改状态的处理\n * @param instance\n * @param props\n * @param propsName\n */\nexport function useSetStatus(instance, props, propsName) {\n  if (props === void 0) {\n    props = {};\n  }\n  if (propsName === void 0) {\n    propsName = [];\n  }\n  propsName.forEach(name => {\n    var eName = name;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var [state, setState] = useState(props[eName]);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (instance && props[eName] !== undefined) {\n        if (props[eName] !== state) {\n          // map.setStatus({\n          //   dragEnable: true,\n          //   keyboardEnable: true,\n          //   doubleClickZoom: true,\n          //   zoomEnable: true,\n          //   rotateEnable: true\n          // });\n          var status = instance.getStatus();\n          instance.setStatus(_extends({}, status, {\n            [eName]: props[eName]\n          }));\n          setState(props[eName]);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instance, props[eName]]);\n  });\n}\n\n/**\n * 针对 Overlay 类型的组件，有公共的是否显示 对象处理\n * 通过参数 `visiable` 来控制执行 `show()` or `hide()`\n */\nexport function useVisiable(instance, visiable) {\n  var [state, setState] = useState(visiable);\n  useEffect(() => {\n    if (instance && visiable !== undefined) {\n      if (visiable) {\n        instance.show && instance.show();\n      } else {\n        instance.hide && instance.hide();\n      }\n      if (visiable !== state) {\n        setState(visiable);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [instance, visiable]);\n}\n\n/**\n * 获取上一轮的 props 或 state\n * How to get the previous props or state?\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * @example\n * ```js\n * function Counter() {\n *   const [count, setCount] = useState(0);\n *   const prevCount = usePrevious(count);\n *   return <h1>Now: {count}, before: {prevCount}</h1>;\n * }\n * ```\n */\nexport function usePrevious(value) {\n  var ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n/**\n * 绑定事件\n * @param instance 实例对象\n * @param props 传递进来的 props\n * @param eventName 事件的名字，如，我们使用 `onClick` 事件，最终被转换成，`click` 绑定到实例中，`onDblClick` => `dblclick`\n *\n * @example\n * ```js\n * useEventProperties<BMap.Marker, UseMarker>(marker!, props, [\n *   'onMouseMove', 'onZoomChange', 'onMapMove', 'onMouseWheel', 'onZoomStart'\n * ]);\n * ```\n */\nexport function useEventProperties(instance, props, eventName, type) {\n  if (props === void 0) {\n    props = {};\n  }\n  if (eventName === void 0) {\n    eventName = [];\n  }\n  eventName.forEach(name => {\n    var eventName = name;\n    var eventHandle = props[eventName];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!instance) return;\n      var eName = name.toLocaleLowerCase().replace(/^on/, '');\n      if (eventHandle && eName) {\n        instance.on(eName, eventHandle);\n      }\n      return () => {\n        if (eName && eventHandle) {\n          instance.off(eName, eventHandle);\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instance, props[eventName]]);\n  });\n}\n\n/**\n * 属性受控\n * @param instance 实例对象\n * @param props 属性值\n * @param propsName 多个属性设置的名称\n * @example\n * ```ts\n * useSettingProperties<AMap.Polyline, UsePolyline>(polyline!, props, [\n *    'Path'\n * ]);\n * ```\n */\nexport function useSettingProperties(instance, props, propsName) {\n  if (instance === void 0) {\n    instance = {};\n  }\n  if (props === void 0) {\n    props = {};\n  }\n  if (propsName === void 0) {\n    propsName = [];\n  }\n  propsName.forEach(name => {\n    var eName = \"set\" + name;\n    var vName = \"\" + name.charAt(0).toLowerCase() + name.slice(1);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var [state, setState] = useState(props[vName]);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (instance && props[vName] !== undefined) {\n        if (props[vName] !== state && instance[eName] && typeof instance[eName] === 'function') {\n          instance[eName](props[vName]);\n          setState(props[vName]);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instance, props[vName]]);\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}