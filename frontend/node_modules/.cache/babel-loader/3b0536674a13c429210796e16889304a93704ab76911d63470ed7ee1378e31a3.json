{"ast":null,"code":"var _jsxFileName = \"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Maptest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nimport { doc, setDoc, Timestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0\n  });\n  const geocoder = useRef(null);\n  useEffect(() => {\n    AMapLoader.load({\n      key: \"5006aba1c28995bc84672dca708fc2d8\",\n      version: \"2.0\",\n      plugins: [\"AMap.Geocoder\", \"AMap.Geolocation\"]\n    }).then(AMap => {\n      const map = new AMap.Map(\"container\", {\n        zoom: 13,\n        resizeEnable: true\n      });\n      const marker = new AMap.Marker({\n        map: map\n      });\n      geocoder.current = new AMap.Geocoder({});\n      const geolocation = new AMap.Geolocation({\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0,\n        convert: true,\n        showButton: true,\n        buttonPosition: \"RB\",\n        buttonOffset: new AMap.Pixel(10, 20),\n        showMarker: false,\n        showCircle: true,\n        panToLocation: true,\n        zoomToAccuracy: true\n      });\n      map.addControl(geolocation);\n      geolocation.getCurrentPosition((status, result) => {\n        if (status === \"complete\") {\n          marker.setPosition(result.position);\n          setMarkerPosition({\n            longitude: result.position.lng,\n            latitude: result.position.lat\n          });\n        } else {\n          console.log(\"Geolocation failed: \" + result.message);\n        }\n      });\n      map.on(\"moveend\", function () {\n        const center = map.getCenter();\n        marker.setPosition(center);\n        setMarkerPosition({\n          longitude: center.lng,\n          latitude: center.lat\n        });\n      });\n    }).catch(e => console.error(e));\n  }, []);\n  const getAddress = (longitude, latitude) => {\n    return new Promise((resolve, reject) => {\n      geocoder.current.getAddress([longitude, latitude], (status, result) => {\n        console.log(\"Geocoding status: \", status);\n        console.log(\"Geocoding result: \", result);\n        if (status === \"complete\" && result.info === \"OK\") {\n          resolve(result.regeocode.formattedAddress);\n        } else {\n          reject(\"Failed to get address\");\n        }\n      });\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      if (userId.trim() === \"\") {\n        alert(\"User ID cannot be empty\");\n        return;\n      }\n      const currentAddress = await getAddress(markerPosition.longitude, markerPosition.latitude);\n      const docRef = doc(db, \"locations\", userId);\n      await setDoc(docRef, {\n        username: userId,\n        address: currentAddress,\n        timestamp: Timestamp.now()\n      });\n      setAddress(currentAddress);\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen bg-gray-100 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" mx-auto flex justify-center mt-20\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \" text-lg rounded-lg px-3\",\n        value: userId,\n        onChange: e => setUserId(e.target.value),\n        placeholder: \"Enter User ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      style: {\n        width: \"100%\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Address: \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"yvVVhFWGgMGnIc4dH1Q3CkXxk38=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AMapLoader","doc","setDoc","Timestamp","db","jsxDEV","_jsxDEV","MapComponent","_s","userId","setUserId","address","setAddress","markerPosition","setMarkerPosition","longitude","latitude","geocoder","load","key","version","plugins","then","AMap","map","Map","zoom","resizeEnable","marker","Marker","current","Geocoder","geolocation","Geolocation","enableHighAccuracy","timeout","maximumAge","convert","showButton","buttonPosition","buttonOffset","Pixel","showMarker","showCircle","panToLocation","zoomToAccuracy","addControl","getCurrentPosition","status","result","setPosition","position","lng","lat","console","log","message","on","center","getCenter","catch","e","error","getAddress","Promise","resolve","reject","info","regeocode","formattedAddress","handleSubmit","trim","alert","currentAddress","docRef","username","timestamp","now","className","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","height","onClick","_c","$RefreshReg$"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/Maptest.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nimport { doc, setDoc, Timestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\n\nconst MapComponent = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0,\n  });\n\n  const geocoder = useRef(null);\n\n  useEffect(() => {\n    AMapLoader.load({\n      key: \"5006aba1c28995bc84672dca708fc2d8\",\n      version: \"2.0\",\n      plugins: [\"AMap.Geocoder\", \"AMap.Geolocation\"],\n    })\n      .then((AMap) => {\n        const map = new AMap.Map(\"container\", {\n          zoom: 13,\n          resizeEnable: true,\n        });\n\n        const marker = new AMap.Marker({\n          map: map,\n        });\n\n        geocoder.current = new AMap.Geocoder({});\n\n        const geolocation = new AMap.Geolocation({\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0,\n          convert: true,\n          showButton: true,\n          buttonPosition: \"RB\",\n          buttonOffset: new AMap.Pixel(10, 20),\n          showMarker: false,\n          showCircle: true,\n          panToLocation: true,\n          zoomToAccuracy: true,\n        });\n\n        map.addControl(geolocation);\n\n        geolocation.getCurrentPosition((status, result) => {\n          if (status === \"complete\") {\n            marker.setPosition(result.position);\n            setMarkerPosition({\n              longitude: result.position.lng,\n              latitude: result.position.lat,\n            });\n          } else {\n            console.log(\"Geolocation failed: \" + result.message);\n          }\n        });\n\n        map.on(\"moveend\", function () {\n          const center = map.getCenter();\n          marker.setPosition(center);\n          setMarkerPosition({ longitude: center.lng, latitude: center.lat });\n        });\n      })\n      .catch((e) => console.error(e));\n  }, []);\n\n  const getAddress = (longitude, latitude) => {\n    return new Promise((resolve, reject) => {\n      geocoder.current.getAddress([longitude, latitude], (status, result) => {\n        console.log(\"Geocoding status: \", status);\n        console.log(\"Geocoding result: \", result);\n        if (status === \"complete\" && result.info === \"OK\") {\n          resolve(result.regeocode.formattedAddress);\n        } else {\n          reject(\"Failed to get address\");\n        }\n      });\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (userId.trim() === \"\") {\n        alert(\"User ID cannot be empty\");\n        return;\n      }\n      const currentAddress = await getAddress(\n        markerPosition.longitude,\n        markerPosition.latitude\n      );\n      const docRef = doc(db, \"locations\", userId);\n      await setDoc(docRef, {\n        username: userId,\n        address: currentAddress,\n        timestamp: Timestamp.now(),\n      });\n      setAddress(currentAddress);\n      alert(\"Data submitted successfully\");\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n    }\n  };\n\n  return (\n    <div className=\"h-screen bg-gray-100 overflow-hidden\">\n      <div className=\" mx-auto flex justify-center mt-20\">\n        <input\n          className=\" text-lg rounded-lg px-3\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          placeholder=\"Enter User ID\"\n        />\n      </div>\n      <div id=\"container\" style={{ width: \"100%\", height: \"400px\" }}></div>\n      <button onClick={handleSubmit}>Submit</button>\n      <div>Address: {address}</div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}