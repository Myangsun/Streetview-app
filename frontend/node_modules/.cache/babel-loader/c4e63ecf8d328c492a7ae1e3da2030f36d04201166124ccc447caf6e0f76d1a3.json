{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useVisiable } from '@uiw/react-amap-utils';\nimport { useMapContext } from '@uiw/react-amap-map';\nimport { TileLayerType } from './index';\nexport function useTileLayer(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var [tileLayer, setTileLayer] = useState();\n  var {\n    visiable,\n    type,\n    options\n  } = props;\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (map) {\n      var instance = null;\n      if (type) {\n        switch (type) {\n          case TileLayerType.ROADNET:\n            instance = new AMap.TileLayer.RoadNet({});\n            break;\n          case TileLayerType.SATELLITE:\n            instance = new AMap.TileLayer.Satellite({});\n            break;\n          case TileLayerType.TRAFFIC:\n            instance = new AMap.TileLayer.Traffic({});\n            break;\n        }\n      }\n      if (options) {\n        instance = new AMap.TileLayer(options);\n      }\n      if (!!instance) {\n        // 暂不使用这个 API，这个不兼容 v1.4.xx\n        // map.addLayer(instance);\n        map.add(instance);\n        props.onAdded && props.onAdded();\n        setTileLayer(instance);\n      }\n      return () => {\n        if (instance) {\n          if (AMap.v) {\n            map && map.remove(instance);\n          } else {\n            // 暂不使用这个 API，这个不兼容 v1.4.xx，改用 map.remove API\n            map && map.removeLayer(instance);\n          }\n          setTileLayer(null);\n          props.onRemoved && props.onRemoved();\n        }\n      };\n    }\n  }, [map, type, options]);\n  useVisiable(tileLayer, visiable);\n  return {\n    tileLayer,\n    setTileLayer\n  };\n}","map":{"version":3,"names":["useEffect","useState","useVisiable","useMapContext","TileLayerType","useTileLayer","props","tileLayer","setTileLayer","visiable","type","options","map","instance","ROADNET","AMap","TileLayer","RoadNet","SATELLITE","Satellite","TRAFFIC","Traffic","add","onAdded","v","remove","removeLayer","onRemoved"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/node_modules/@uiw/react-amap-tile-layer/esm/useTileLayer.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useVisiable } from '@uiw/react-amap-utils';\nimport { useMapContext } from '@uiw/react-amap-map';\nimport { TileLayerType } from './index';\nexport function useTileLayer(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var [tileLayer, setTileLayer] = useState();\n  var {\n    visiable,\n    type,\n    options\n  } = props;\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (map) {\n      var instance = null;\n      if (type) {\n        switch (type) {\n          case TileLayerType.ROADNET:\n            instance = new AMap.TileLayer.RoadNet({});\n            break;\n          case TileLayerType.SATELLITE:\n            instance = new AMap.TileLayer.Satellite({});\n            break;\n          case TileLayerType.TRAFFIC:\n            instance = new AMap.TileLayer.Traffic({});\n            break;\n        }\n      }\n      if (options) {\n        instance = new AMap.TileLayer(options);\n      }\n      if (!!instance) {\n        // 暂不使用这个 API，这个不兼容 v1.4.xx\n        // map.addLayer(instance);\n        map.add(instance);\n        props.onAdded && props.onAdded();\n        setTileLayer(instance);\n      }\n      return () => {\n        if (instance) {\n          if (AMap.v) {\n            map && map.remove(instance);\n          } else {\n            // 暂不使用这个 API，这个不兼容 v1.4.xx，改用 map.remove API\n            map && map.removeLayer(instance);\n          }\n          setTileLayer(null);\n          props.onRemoved && props.onRemoved();\n        }\n      };\n    }\n  }, [map, type, options]);\n  useVisiable(tileLayer, visiable);\n  return {\n    tileLayer,\n    setTileLayer\n  };\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,aAAa,QAAQ,SAAS;AACvC,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAClC,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;IACpBA,KAAK,GAAG,CAAC,CAAC;EACZ;EACA,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC1C,IAAI;IACFQ,QAAQ;IACRC,IAAI;IACJC;EACF,CAAC,GAAGL,KAAK;EACT,IAAI;IACFM;EACF,CAAC,GAAGT,aAAa,CAAC,CAAC;EACnBH,SAAS,CAAC,MAAM;IACd,IAAIY,GAAG,EAAE;MACP,IAAIC,QAAQ,GAAG,IAAI;MACnB,IAAIH,IAAI,EAAE;QACR,QAAQA,IAAI;UACV,KAAKN,aAAa,CAACU,OAAO;YACxBD,QAAQ,GAAG,IAAIE,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzC;UACF,KAAKb,aAAa,CAACc,SAAS;YAC1BL,QAAQ,GAAG,IAAIE,IAAI,CAACC,SAAS,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC3C;UACF,KAAKf,aAAa,CAACgB,OAAO;YACxBP,QAAQ,GAAG,IAAIE,IAAI,CAACC,SAAS,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;YACzC;QACJ;MACF;MACA,IAAIV,OAAO,EAAE;QACXE,QAAQ,GAAG,IAAIE,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC;MACxC;MACA,IAAI,CAAC,CAACE,QAAQ,EAAE;QACd;QACA;QACAD,GAAG,CAACU,GAAG,CAACT,QAAQ,CAAC;QACjBP,KAAK,CAACiB,OAAO,IAAIjB,KAAK,CAACiB,OAAO,CAAC,CAAC;QAChCf,YAAY,CAACK,QAAQ,CAAC;MACxB;MACA,OAAO,MAAM;QACX,IAAIA,QAAQ,EAAE;UACZ,IAAIE,IAAI,CAACS,CAAC,EAAE;YACVZ,GAAG,IAAIA,GAAG,CAACa,MAAM,CAACZ,QAAQ,CAAC;UAC7B,CAAC,MAAM;YACL;YACAD,GAAG,IAAIA,GAAG,CAACc,WAAW,CAACb,QAAQ,CAAC;UAClC;UACAL,YAAY,CAAC,IAAI,CAAC;UAClBF,KAAK,CAACqB,SAAS,IAAIrB,KAAK,CAACqB,SAAS,CAAC,CAAC;QACtC;MACF,CAAC;IACH;EACF,CAAC,EAAE,CAACf,GAAG,EAAEF,IAAI,EAAEC,OAAO,CAAC,CAAC;EACxBT,WAAW,CAACK,SAAS,EAAEE,QAAQ,CAAC;EAChC,OAAO;IACLF,SAAS;IACTC;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}