{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useVisiable } from '@uiw/react-amap-utils';\nimport { useMapContext } from '@uiw/react-amap-map';\nexport function useControlBarControl(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var {\n    position,\n    visiable,\n    offset\n  } = props;\n  var [controlBarControl, setControlBarControl] = useState();\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (map && !controlBarControl) {\n      var instance;\n      map.plugin(['AMap.ControlBar', 'AMap.HawkEye'], () => {\n        instance = new AMap.ControlBar({\n          offset: offset,\n          position\n        });\n        map.addControl(instance);\n        setControlBarControl(instance);\n      });\n      return () => {\n        if (instance) {\n          map.removeControl(instance);\n        }\n      };\n    }\n  }, [map]);\n  useVisiable(controlBarControl, visiable);\n  return {\n    controlBarControl,\n    setControlBarControl\n  };\n}","map":{"version":3,"names":["useEffect","useState","useVisiable","useMapContext","useControlBarControl","props","position","visiable","offset","controlBarControl","setControlBarControl","map","instance","plugin","AMap","ControlBar","addControl","removeControl"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/node_modules/@uiw/react-amap-control-bar-control/esm/useControlBarControl.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useVisiable } from '@uiw/react-amap-utils';\nimport { useMapContext } from '@uiw/react-amap-map';\nexport function useControlBarControl(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var {\n    position,\n    visiable,\n    offset\n  } = props;\n  var [controlBarControl, setControlBarControl] = useState();\n  var {\n    map\n  } = useMapContext();\n  useEffect(() => {\n    if (map && !controlBarControl) {\n      var instance;\n      map.plugin(['AMap.ControlBar', 'AMap.HawkEye'], () => {\n        instance = new AMap.ControlBar({\n          offset: offset,\n          position\n        });\n        map.addControl(instance);\n        setControlBarControl(instance);\n      });\n      return () => {\n        if (instance) {\n          map.removeControl(instance);\n        }\n      };\n    }\n  }, [map]);\n  useVisiable(controlBarControl, visiable);\n  return {\n    controlBarControl,\n    setControlBarControl\n  };\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAO,SAASC,oBAAoBA,CAACC,KAAK,EAAE;EAC1C,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;IACpBA,KAAK,GAAG,CAAC,CAAC;EACZ;EACA,IAAI;IACFC,QAAQ;IACRC,QAAQ;IACRC;EACF,CAAC,GAAGH,KAAK;EACT,IAAI,CAACI,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAC1D,IAAI;IACFU;EACF,CAAC,GAAGR,aAAa,CAAC,CAAC;EACnBH,SAAS,CAAC,MAAM;IACd,IAAIW,GAAG,IAAI,CAACF,iBAAiB,EAAE;MAC7B,IAAIG,QAAQ;MACZD,GAAG,CAACE,MAAM,CAAC,CAAC,iBAAiB,EAAE,cAAc,CAAC,EAAE,MAAM;QACpDD,QAAQ,GAAG,IAAIE,IAAI,CAACC,UAAU,CAAC;UAC7BP,MAAM,EAAEA,MAAM;UACdF;QACF,CAAC,CAAC;QACFK,GAAG,CAACK,UAAU,CAACJ,QAAQ,CAAC;QACxBF,oBAAoB,CAACE,QAAQ,CAAC;MAChC,CAAC,CAAC;MACF,OAAO,MAAM;QACX,IAAIA,QAAQ,EAAE;UACZD,GAAG,CAACM,aAAa,CAACL,QAAQ,CAAC;QAC7B;MACF,CAAC;IACH;EACF,CAAC,EAAE,CAACD,GAAG,CAAC,CAAC;EACTT,WAAW,CAACO,iBAAiB,EAAEF,QAAQ,CAAC;EACxC,OAAO;IACLE,iBAAiB;IACjBC;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}