{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"visiable\", \"position\"];\nimport { useState, useMemo, useEffect } from 'react';\nimport { useEventProperties, useSettingProperties, usePortal } from '@uiw/react-amap-utils';\nimport { useMapContext } from '@uiw/react-amap-map';\nexport var useInfoWindow = function useInfoWindow(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var {\n      visiable,\n      position\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var {\n    map\n  } = useMapContext();\n  var [isOpen, setIsOpen] = useState(visiable);\n  var [infoWindow, setInfoWindow] = useState();\n  var {\n    container,\n    Portal\n  } = usePortal();\n  useEffect(() => {\n    if (!AMap || !map) return;\n    if (!infoWindow) {\n      var positionCenter = map.getCenter();\n      if (props.children) {\n        other.content = container;\n      }\n      var instance = new AMap.InfoWindow(_extends({}, other, {\n        position: position || positionCenter\n      }));\n      setInfoWindow(instance);\n      if (isOpen) {\n        instance.open(map, position || positionCenter);\n      }\n      return () => {\n        if (instance) {\n          map && map.remove(instance);\n          setInfoWindow(undefined);\n        }\n      };\n    }\n  }, [map]);\n  useEffect(() => {\n    if (infoWindow) {\n      infoWindow.setContent(props.children ? container : other.content || '');\n    }\n  }, [props.children, container, other.content, infoWindow]);\n  useMemo(() => {\n    if (isOpen !== visiable && infoWindow && map) {\n      setIsOpen(visiable);\n      if (visiable) {\n        var positionCenter = map.getCenter();\n        infoWindow.open(map, position || positionCenter);\n      } else {\n        infoWindow.close();\n      }\n    }\n  }, [visiable, infoWindow]);\n  useEffect(() => {\n    if (!map || !infoWindow || !visiable) return;\n    var positionCenter = map.getCenter();\n    infoWindow.open(map, position || positionCenter);\n  }, [position]);\n  useSettingProperties(infoWindow, props, ['Content', 'Anchor', 'Size']);\n  useEventProperties(infoWindow, props, ['onOpen', 'onClose', 'onChange']);\n  return {\n    isOpen,\n    setIsOpen,\n    infoWindow,\n    setInfoWindow,\n    InfoWindowPortal: Portal\n  };\n};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","useState","useMemo","useEffect","useEventProperties","useSettingProperties","usePortal","useMapContext","useInfoWindow","props","visiable","position","other","map","isOpen","setIsOpen","infoWindow","setInfoWindow","container","Portal","AMap","positionCenter","getCenter","children","content","instance","InfoWindow","open","remove","undefined","setContent","close","InfoWindowPortal"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/node_modules/@uiw/react-amap-info-window/esm/useInfoWindow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"visiable\", \"position\"];\nimport { useState, useMemo, useEffect } from 'react';\nimport { useEventProperties, useSettingProperties, usePortal } from '@uiw/react-amap-utils';\nimport { useMapContext } from '@uiw/react-amap-map';\nexport var useInfoWindow = function useInfoWindow(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var {\n      visiable,\n      position\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var {\n    map\n  } = useMapContext();\n  var [isOpen, setIsOpen] = useState(visiable);\n  var [infoWindow, setInfoWindow] = useState();\n  var {\n    container,\n    Portal\n  } = usePortal();\n  useEffect(() => {\n    if (!AMap || !map) return;\n    if (!infoWindow) {\n      var positionCenter = map.getCenter();\n      if (props.children) {\n        other.content = container;\n      }\n      var instance = new AMap.InfoWindow(_extends({}, other, {\n        position: position || positionCenter\n      }));\n      setInfoWindow(instance);\n      if (isOpen) {\n        instance.open(map, position || positionCenter);\n      }\n      return () => {\n        if (instance) {\n          map && map.remove(instance);\n          setInfoWindow(undefined);\n        }\n      };\n    }\n  }, [map]);\n  useEffect(() => {\n    if (infoWindow) {\n      infoWindow.setContent(props.children ? container : other.content || '');\n    }\n  }, [props.children, container, other.content, infoWindow]);\n  useMemo(() => {\n    if (isOpen !== visiable && infoWindow && map) {\n      setIsOpen(visiable);\n      if (visiable) {\n        var positionCenter = map.getCenter();\n        infoWindow.open(map, position || positionCenter);\n      } else {\n        infoWindow.close();\n      }\n    }\n  }, [visiable, infoWindow]);\n  useEffect(() => {\n    if (!map || !infoWindow || !visiable) return;\n    var positionCenter = map.getCenter();\n    infoWindow.open(map, position || positionCenter);\n  }, [position]);\n  useSettingProperties(infoWindow, props, ['Content', 'Anchor', 'Size']);\n  useEventProperties(infoWindow, props, ['onOpen', 'onClose', 'onChange']);\n  return {\n    isOpen,\n    setIsOpen,\n    infoWindow,\n    setInfoWindow,\n    InfoWindowPortal: Portal\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}