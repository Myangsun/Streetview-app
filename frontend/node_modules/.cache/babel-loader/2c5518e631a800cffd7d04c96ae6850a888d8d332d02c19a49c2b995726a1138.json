{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef}from\"react\";import AMapLoader from\"@amap/amap-jsapi-loader\";import Submit from\"./Submit\";import dynamoDB from\"../config\";import amapConfig from\"../amapConfig\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MapComponent=function MapComponent(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userId=_useState2[0],setUserId=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),address=_useState4[0],setAddress=_useState4[1];var _useState5=useState({longitude:0,latitude:0}),_useState6=_slicedToArray(_useState5,2),markerPosition=_useState6[0],setMarkerPosition=_useState6[1];window._AMapSecurityConfig={securityJsCode:amapConfig.securityJsCode};var geocoder=useRef(null);useEffect(function(){AMapLoader.load({key:amapConfig.key,version:\"2.0\",plugins:[\"AMap.Geocoder\",\"AMap.Geolocation\"]}).then(function(AMap){var map=new AMap.Map(\"container\",{zoom:13,resizeEnable:true});var marker=new AMap.Marker({map:map});geocoder.current=new AMap.Geocoder({});var geolocation=new AMap.Geolocation({enableHighAccuracy:true,timeout:10000,maximumAge:0,convert:true,showButton:true,buttonPosition:\"RB\",buttonOffset:new AMap.Pixel(10,20),showMarker:false,showCircle:true,panToLocation:true,zoomToAccuracy:true});map.addControl(geolocation);geolocation.getCurrentPosition(function(status,result){if(status===\"complete\"){marker.setPosition(result.position);setMarkerPosition({longitude:result.position.lng,latitude:result.position.lat});}else{console.log(\"Geolocation failed: \"+result.message);}});map.on(\"moveend\",function(){var center=map.getCenter();marker.setPosition(center);setMarkerPosition({longitude:center.lng,latitude:center.lat});});}).catch(function(e){return console.error(e);});},[]);var getAddress=function getAddress(longitude,latitude){return new Promise(function(resolve,reject){geocoder.current.getAddress([longitude,latitude],function(status,result){console.log(\"Geocoding status: \",status);console.log(\"Geocoding result: \",result);if(status===\"complete\"&&result.info===\"OK\"){resolve(result.regeocode.formattedAddress);}else{reject(\"Failed to get address\");}});});};var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var currentAddress,params;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;if(!(userId.trim()===\"\")){_context.next=4;break;}alert(\"User ID cannot be empty\");return _context.abrupt(\"return\");case 4:_context.next=6;return getAddress(markerPosition.longitude,markerPosition.latitude);case 6:currentAddress=_context.sent;params={TableName:\"locations\",Item:{username:userId,address:currentAddress,position:{longitude:markerPosition.longitude,latitude:markerPosition.latitude},timestamp:Date.now()}};_context.next=10;return dynamoDB.put(params).promise();case 10:setAddress(currentAddress);alert(\"Data submitted successfully 成功提交\");_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.error(\"Error uploading data:\",_context.t0);case 17:case\"end\":return _context.stop();}},_callee,null,[[0,14]]);}));return function handleSubmit(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen bg-gray-100 overflow-hidden mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fixed w-full top-20 z-50 text-center\",children:[/*#__PURE__*/_jsx(\"input\",{className:\" w-[60%] text-lg rounded-lg px-3 pt-2 pb-2\",value:userId,onChange:function onChange(e){return setUserId(e.target.value);},placeholder:\"\\u8F93\\u5165\\u7528\\u6237\\u540D\"}),\" \"]}),/*#__PURE__*/_jsx(\"div\",{id:\"container\",className:\"h-full\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full fixed bottom-12 items-center flex\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"bg-gray-500 hover:bg-gray-700 text-white text-md font-bold py-2 px-4 rounded ml-auto mr-6\",children:\"\\u63D0\\u4EA4\"}),/*#__PURE__*/_jsx(Submit,{})]})]});};export default MapComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","AMapLoader","Submit","dynamoDB","amapConfig","jsx","_jsx","jsxs","_jsxs","MapComponent","_useState","_useState2","_slicedToArray","userId","setUserId","_useState3","_useState4","address","setAddress","_useState5","longitude","latitude","_useState6","markerPosition","setMarkerPosition","window","_AMapSecurityConfig","securityJsCode","geocoder","load","key","version","plugins","then","AMap","map","Map","zoom","resizeEnable","marker","Marker","current","Geocoder","geolocation","Geolocation","enableHighAccuracy","timeout","maximumAge","convert","showButton","buttonPosition","buttonOffset","Pixel","showMarker","showCircle","panToLocation","zoomToAccuracy","addControl","getCurrentPosition","status","result","setPosition","position","lng","lat","console","log","message","on","center","getCenter","catch","e","error","getAddress","Promise","resolve","reject","info","regeocode","formattedAddress","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","currentAddress","params","wrap","_callee$","_context","prev","next","trim","alert","abrupt","sent","TableName","Item","username","timestamp","Date","now","put","promise","t0","stop","apply","arguments","className","children","value","onChange","target","placeholder","id","onClick"],"sources":["/Users/mingyang/Desktop/Application/AIGC/urban track/streetview app/frontend/src/components/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\nimport Submit from \"./Submit\";\nimport dynamoDB from \"../config\";\nimport amapConfig from \"../amapConfig\";\n\nconst MapComponent = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState({\n    longitude: 0,\n    latitude: 0,\n  });\n  window._AMapSecurityConfig = {\n    securityJsCode: amapConfig.securityJsCode,\n  };\n  const geocoder = useRef(null);\n\n  useEffect(() => {\n    AMapLoader.load({\n      key: amapConfig.key,\n      version: \"2.0\",\n      plugins: [\"AMap.Geocoder\", \"AMap.Geolocation\"],\n    })\n      .then((AMap) => {\n        const map = new AMap.Map(\"container\", {\n          zoom: 13,\n          resizeEnable: true,\n        });\n\n        const marker = new AMap.Marker({\n          map: map,\n        });\n\n        geocoder.current = new AMap.Geocoder({});\n\n        const geolocation = new AMap.Geolocation({\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0,\n          convert: true,\n          showButton: true,\n          buttonPosition: \"RB\",\n          buttonOffset: new AMap.Pixel(10, 20),\n          showMarker: false,\n          showCircle: true,\n          panToLocation: true,\n          zoomToAccuracy: true,\n        });\n\n        map.addControl(geolocation);\n\n        geolocation.getCurrentPosition((status, result) => {\n          if (status === \"complete\") {\n            marker.setPosition(result.position);\n            setMarkerPosition({\n              longitude: result.position.lng,\n              latitude: result.position.lat,\n            });\n          } else {\n            console.log(\"Geolocation failed: \" + result.message);\n          }\n        });\n\n        map.on(\"moveend\", function () {\n          const center = map.getCenter();\n          marker.setPosition(center);\n          setMarkerPosition({ longitude: center.lng, latitude: center.lat });\n        });\n      })\n      .catch((e) => console.error(e));\n  }, []);\n\n  const getAddress = (longitude, latitude) => {\n    return new Promise((resolve, reject) => {\n      geocoder.current.getAddress([longitude, latitude], (status, result) => {\n        console.log(\"Geocoding status: \", status);\n        console.log(\"Geocoding result: \", result);\n        if (status === \"complete\" && result.info === \"OK\") {\n          resolve(result.regeocode.formattedAddress);\n        } else {\n          reject(\"Failed to get address\");\n        }\n      });\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (userId.trim() === \"\") {\n        alert(\"User ID cannot be empty\");\n        return;\n      }\n      const currentAddress = await getAddress(\n        markerPosition.longitude,\n        markerPosition.latitude\n      );\n      const params = {\n        TableName: \"locations\",\n        Item: {\n          username: userId,\n          address: currentAddress,\n          position: {\n            longitude: markerPosition.longitude,\n            latitude: markerPosition.latitude,\n          },\n          timestamp: Date.now(),\n        },\n      };\n      await dynamoDB.put(params).promise();\n      setAddress(currentAddress);\n      alert(\"Data submitted successfully 成功提交\");\n    } catch (error) {\n      console.error(\"Error uploading data:\", error);\n    }\n  };\n\n  return (\n    <div className=\"h-screen bg-gray-100 overflow-hidden mx-auto\">\n      <div className=\"fixed w-full top-20 z-50 text-center\">\n        <input\n          className=\" w-[60%] text-lg rounded-lg px-3 pt-2 pb-2\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          placeholder=\"输入用户名\"\n        />{\" \"}\n        {/* <div className=\"w-[60%] top-28 text-md rounded-lg font-light px-3\"> */}\n        {/* Address: {address} */}\n        {/* </div> */}\n      </div>\n      <div id=\"container\" className=\"h-full\"></div>\n\n      <div className=\"w-full fixed bottom-12 items-center flex\">\n        <button\n          onClick={handleSubmit}\n          className=\"bg-gray-500 hover:bg-gray-700 text-white text-md font-bold py-2 px-4 rounded ml-auto mr-6\"\n        >\n          提交\n        </button>\n        {/* Click to send location information/ request url */}\n        <Submit />\n      </div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}